WEBVTT

00:00.460 --> 00:05.290
Now, in order for us to use view model, we compose Android compose here.

00:05.470 --> 00:07.300
We need to get a few things.

00:08.320 --> 00:15.340
So if you go to Google and say Compose Android View Model and you want to go to the second usually second

00:15.340 --> 00:20.020
hit that says developer, that Android Jetpack Library is OK, so it's quick there.

00:21.640 --> 00:27.040
And here you can read more about few models, so there is a lot of information you can spend hours and

00:27.040 --> 00:28.270
hours and days and so forth.

00:28.360 --> 00:32.950
But what I really want to to emphasize here and take time to read it or some things are a little bit

00:32.950 --> 00:34.030
advanced, but that's OK.

00:34.270 --> 00:38.620
Scroll down until you see the full model, OK, here.

00:39.040 --> 00:44.120
So it says if you use the architectural components of your model library, you can access if you model

00:44.120 --> 00:46.760
from any composer by calling view model.

00:46.780 --> 00:53.560
This is good, but there is a caution here to say to use a few model functions, add the Android Lifecycle

00:53.830 --> 00:57.940
View model compose and the version number here now.

00:57.960 --> 01:02.740
This may change this version, but that's what we are at this point.

01:03.520 --> 01:10.180
So this is what we need to add or build a Gradle in order for us to get the review model lifecycle.

01:10.420 --> 01:11.740
Go ahead and copy this.

01:11.980 --> 01:15.910
Go back to our code project and I'm going to open Gradle.

01:16.150 --> 01:20.350
Close this down the second Gradle there.

01:22.140 --> 01:23.400
And scroll down.

01:23.550 --> 01:25.770
We have a lot of squiggly lines here.

01:25.800 --> 01:34.650
It's fine, so what I'm going to do is right down here when I say implementation, I could put as an

01:34.650 --> 01:41.760
object dependency or I can just say like this double quotes and paste that code there.

01:41.970 --> 01:47.270
I believe that now we also will have to change to to that.

01:47.270 --> 01:48.470
Fordow was an old one.

01:48.480 --> 01:51.600
They would go with just click and it's going to do that.

01:51.630 --> 01:55.140
Now here is everything that you may notice.

01:55.530 --> 01:55.860
OK.

01:55.950 --> 02:00.960
Whenever you come to build a Gradle and you see that all of these have squiggly lines, in fact, if

02:00.960 --> 02:07.050
you have over is going to change to that version, you can go ahead and continue, or you can just go

02:07.050 --> 02:09.480
ahead and say it out option.

02:09.480 --> 02:12.570
Enter and go ahead and do all of that.

02:12.600 --> 02:18.740
Now this one, here you notice that it says that in our version of Android Compose UI, OK?

02:19.260 --> 02:25.250
There's a new version that is one that oh, that for now, here's the thing most likely you're going

02:25.250 --> 02:29.250
to have a lot of errors if you start changing, especially decompose version.

02:29.790 --> 02:33.490
Here's what I'm going to show you how to fix a few things here, right?

02:33.810 --> 02:35.550
I'm not saying you're going to have this errors.

02:35.730 --> 02:37.170
If you don't, then that's great.

02:37.350 --> 02:41.910
But if you do, here's all you do the compose version you can see that is a variable.

02:42.030 --> 02:42.930
Where is this?

02:43.800 --> 02:44.880
Where is this declared?

02:45.360 --> 02:48.220
Well, this is declared inside of or build a Gradle.

02:48.600 --> 02:51.150
The this first one, so click.

02:52.360 --> 02:52.960
It's here.

02:53.590 --> 02:57.120
So what do you want to do as a recording this video?

02:57.130 --> 02:59.400
We need to go to one that oh, that for.

03:00.080 --> 03:01.360
OK, great.

03:01.570 --> 03:09.810
And also, most likely, you will see a squiggly line in our build that cradle in our cradle here.

03:09.820 --> 03:12.190
So we're going to change that to seven and older three again.

03:12.460 --> 03:14.320
These numbers may change.

03:14.320 --> 03:20.050
In fact, they will be different when by the time you watch this video could probably be seven by 10

03:20.440 --> 03:21.970
or seven or eight.

03:22.120 --> 03:25.230
That, oh, that one doesn't matter, but just go ahead.

03:25.240 --> 03:32.910
And in this case here, let's go ahead and change to seven or three now because I know this will happen.

03:32.920 --> 03:35.470
You have to also change this to three.

03:35.500 --> 03:36.490
Like this again?

03:37.270 --> 03:40.780
You don't have to change anything if everything is up to date.

03:41.920 --> 03:43.720
It's only if it's not up to date.

03:43.990 --> 03:49.930
If you change to seven 03 in this case at the moment, at this moment when I am recording this video,

03:50.320 --> 03:55.840
it will require you to change the Catlin plug in grade or plug in to one five three.

03:56.410 --> 03:59.260
By the time you any time you watch this video could be higher.

03:59.650 --> 04:00.010
All right.

04:00.400 --> 04:05.500
Now, if let's go back to our previous grade or here, you can see that we should be fairly OK.

04:05.980 --> 04:09.790
Let's go ahead and do the same to others that are not really important to us.

04:09.790 --> 04:12.370
But since we're here, we're going to do it anyway.

04:12.910 --> 04:14.410
Let's go ahead and sync a real quick.

04:17.470 --> 04:18.490
Might take a little bit.

04:21.250 --> 04:23.530
It looks like everything is great right now.

04:24.600 --> 04:32.970
And what I usually like to do, I like to run the app right away, just make sure that we didn't make

04:33.900 --> 04:36.810
mistakes and things are not working anymore.

04:36.810 --> 04:37.890
So this is an old.

04:38.250 --> 04:39.270
Just give it a time.

04:39.870 --> 04:40.150
All right.

04:40.170 --> 04:43.970
It looks like everything is running smoothly.

04:43.980 --> 04:44.820
And that's good.

04:44.970 --> 04:45.600
I can delete.

04:45.630 --> 04:46.670
OK, good.

04:46.710 --> 04:50.700
So all of the updates didn't mess up with our code.

04:51.120 --> 04:54.400
It's always good news now that we have this new model dependency.

04:54.420 --> 04:55.530
We're going to implement it.

04:56.430 --> 04:59.070
Let's go ahead and close this down to show just code.

04:59.850 --> 05:05.340
So I usually like to add a view model close to the main screen per se.

05:05.550 --> 05:09.210
In this case, notes screen is what governs everything.

05:09.840 --> 05:14.460
So I'm going to say command end or right click, and I want to create a court ruling class.

05:14.910 --> 05:17.310
This is going to be just a class.

05:17.400 --> 05:19.020
Let's call this note.

05:21.540 --> 05:27.450
Review model, and the naming is very important, so whenever you notice that we expanded view model

05:27.450 --> 05:34.830
to the name of our field, one of our few model that way because we may have more than one few models.

05:34.830 --> 05:41.790
In fact, most most apps have more than one view model, so it's nice to connect or to obtain that view

05:41.790 --> 05:42.150
model.

05:42.150 --> 05:44.310
So we know it is indeed, if you model.

05:44.640 --> 05:46.110
OK, so there you go.

05:46.530 --> 05:51.690
And in this case here, this will inherit the view model.

05:51.720 --> 05:53.890
As such, get the first one there.

05:53.890 --> 05:55.950
That's A. X life cycle.

05:57.420 --> 05:59.570
And of course, pass in there.

05:59.700 --> 06:00.630
The constructor there.

06:01.650 --> 06:02.030
All right.

06:02.040 --> 06:02.550
There we go.

06:02.880 --> 06:05.880
So it's just a normal class, but with more power.

06:06.180 --> 06:12.830
So first, I'm want to create a variable section to call this note list, and I'm going to say mutable.

06:12.840 --> 06:16.440
It's going to make this immutable list mutable state.

06:16.440 --> 06:21.390
That is that there's a difference because we want to capture the state and then right away, it will

06:21.390 --> 06:22.860
tell us, OK, what is the type?

06:22.860 --> 06:26.250
We are going to allow this to hold?

06:26.790 --> 06:28.890
It's going to be note type.

06:29.730 --> 06:35.010
They have to import that, make sure we get our note model like this.

06:36.390 --> 06:36.760
All right.

06:37.730 --> 06:39.380
And next here, this is the beauty.

06:39.710 --> 06:42.620
What are we going to do now is I'm going to create a few function.

06:42.620 --> 06:49.910
First functions going to be the add note such and of course, this add note would need to pass an actual

06:49.970 --> 06:51.890
note note object.

06:52.550 --> 07:01.490
And then all I have to do because I have this note list and mutable type state, there was a note list.

07:01.490 --> 07:07.340
And then because it's just a list, I can say add I can add an element, what element it would add it's

07:07.340 --> 07:09.200
going to be a note object.

07:09.740 --> 07:10.250
That's it.

07:11.750 --> 07:14.060
The single source of truth.

07:14.540 --> 07:23.000
And then to remove them, I say, remove note and we're passing, of course, again and note object.

07:23.870 --> 07:25.660
And I would say yes.

07:25.670 --> 07:30.290
Note list dot remove element.

07:30.560 --> 07:31.970
Which element is that going to be?

07:32.450 --> 07:33.980
It's going to be the note object.

07:34.400 --> 07:36.350
And this wants to make it.

07:36.350 --> 07:42.710
Let's make it private because it's just being used here, and I'm going to create another function here

07:42.710 --> 07:44.210
that will get all of the notes.

07:44.210 --> 07:44.990
I would say fun.

07:48.270 --> 07:50.250
Get old notes.

07:51.660 --> 07:52.500
Can I return?

07:53.360 --> 08:00.030
Write a list of notes or objects and when to return?

08:01.910 --> 08:04.220
Note list like that.

08:04.670 --> 08:05.420
And there you have it.

08:05.990 --> 08:09.250
Now we've put everything, we've hosted everything.

08:09.260 --> 08:14.420
The responsibility now of our data and the state of our list is inside of our review model.

08:14.780 --> 08:20.510
And because this is just like any other class, I'm going to pass it here and not block because they

08:20.510 --> 08:25.440
want to have some data when we initialize this note view model, right?

08:25.460 --> 08:27.860
So I'm going to see note list.

08:28.250 --> 08:35.270
I'm going to that add all, just pass a collection of elements and I'm going to get all of those from.

08:37.520 --> 08:38.900
Notes data source.

08:39.390 --> 08:39.600
Right?

08:40.620 --> 08:40.820
Right.

08:41.240 --> 08:42.830
So we have something to work with.

08:42.860 --> 08:43.190
Right.

08:43.460 --> 08:52.010
When they first start the app and say load notes, now, how do we then invoke the note view model?

08:52.550 --> 08:53.390
It's very simple.

08:53.660 --> 08:57.500
Look at this instead of our main activity instead of having this.

08:57.740 --> 09:02.630
What we had this source here, we know that this doesn't work for what we want, right?

09:03.140 --> 09:03.980
We're going to change that.

09:05.750 --> 09:13.970
First of all, I'm going to create a composable here just to simplify our lives, say composable, right,

09:14.540 --> 09:26.750
call these notes, find notes app and this I'm going to pass the data right as an argument here.

09:26.840 --> 09:29.000
So I'm going to say note view model.

09:29.000 --> 09:29.480
Look at that.

09:29.480 --> 09:34.610
It even gives us the chance to choose hat just like that.

09:34.940 --> 09:37.010
And inside here I can go ahead.

09:37.310 --> 09:39.440
The actual view model, how do you do that?

09:39.860 --> 09:42.620
Just a few model like this.

09:43.010 --> 09:48.160
So now the compiler, we know when we say, note every model, we're going to use things shade per,

09:48.220 --> 09:52.370
say, a view model, which is what we have all of this.

09:52.790 --> 09:57.950
In fact, you can see if I highlight that if I'm back here, you see an old view model is highlighted.

09:58.610 --> 10:01.790
So we think shaded or using our an old view model.

10:03.140 --> 10:09.770
So that means now inside of our Notes app here, which we're going to call here in a second here, I'm

10:09.770 --> 10:12.110
going to call actually all of this.

10:14.060 --> 10:16.100
Our notes, I'm going to cut all of this.

10:18.690 --> 10:19.770
And call it here.

10:21.620 --> 10:24.620
And of course, we need to add the experimental right.

10:26.180 --> 10:31.820
Two notes app like this, and we got to change a few things, first of all, he doesn't know what this

10:31.820 --> 10:32.330
note says.

10:32.510 --> 10:33.110
That's fine.

10:33.440 --> 10:38.060
We have an old view model here so we can actually go and get our all of our notes.

10:38.360 --> 10:46.490
So when I create a vowel or variable here call notes list and it's going to be our note review model.

10:46.850 --> 10:47.840
This guy here.

10:48.560 --> 10:50.840
So we're getting our note, a model.

10:52.670 --> 10:54.860
Analysts say does it get old notes?

10:56.680 --> 10:58.360
Look at this now not list.

10:59.770 --> 11:02.260
We'll go and get all notes.

11:02.830 --> 11:09.840
Well, it returns no to list, which is our private variable here, which is mutable state list containing

11:09.850 --> 11:12.260
note that note object.

11:12.730 --> 11:15.580
And we say that initially it should have.

11:17.190 --> 11:19.650
These dummy data from our load notes.

11:21.700 --> 11:22.750
You see now what's going on.

11:23.170 --> 11:29.740
OK, so now that we have our list, I can just pass here, so I say notes list as such and then here,

11:29.830 --> 11:31.900
I don't no longer have to do any of that.

11:32.200 --> 11:32.740
Why?

11:33.070 --> 11:42.220
Because I can go straight to the actual view model and say, note, if you model right dot, invoke

11:42.580 --> 11:45.670
the remove note and pass it.

11:46.660 --> 11:47.650
Look how easy this is.

11:48.040 --> 11:50.080
And then for add note, right?

11:50.350 --> 11:56.590
Say Note View model again that add note and pass it like that.

11:57.640 --> 12:01.390
And just like that, we have it all mapped out.

12:01.570 --> 12:05.680
Let's go ahead and convert this a single line like that.

12:06.040 --> 12:06.790
This as well.

12:06.790 --> 12:08.530
Convert a single line lambda.

12:08.530 --> 12:09.160
And voila!

12:09.190 --> 12:12.920
Of course, you can see that notes is not being called anywhere because we removed everything.

12:12.940 --> 12:14.680
Look, I don't need that.

12:15.040 --> 12:18.220
All I have to do, say notes app.

12:18.610 --> 12:24.820
And now I'll have to, of course, because it's expecting a note view model, right?

12:25.180 --> 12:26.890
So I'm going to create another variable here.

12:26.980 --> 12:29.110
So we'll note the model.

12:30.010 --> 12:33.700
I want to see note review model as such.

12:34.090 --> 12:40.870
And I'm going to say by a few models like this to instantiate our view model.

12:42.430 --> 12:44.170
This is going to be passed along here.

12:45.280 --> 12:47.350
Because we need to pass our notes if you model.

12:47.380 --> 12:53.130
I'm going to pass a notes if you want to like this, right, because they have the same name across

12:53.590 --> 12:55.510
because they have the same name, right?

12:55.510 --> 13:01.540
The argument, the name argument and the actual value you can just say might like this.

13:02.050 --> 13:07.420
If we had a different related or unrelated composable, we could do the same thing.

13:07.660 --> 13:15.220
This Northview model is the source of all truth is the single source of the truth when it comes to data.

13:15.640 --> 13:20.320
Now, if I run this, it will still work as it was working before.

13:20.740 --> 13:26.020
However, we would sleep better at night because we all know that our app is working.

13:27.070 --> 13:29.980
And voila, as you see, it's loading.

13:30.700 --> 13:31.900
It's calling this minute.

13:34.020 --> 13:41.310
Block here, and we're loading our note list right away with notes that are source and get the notes

13:41.640 --> 13:43.860
right to dummy notes, in fact.

13:43.950 --> 13:48.980
And still, if I click any of this, I should be able to delete them as a clicking.

13:48.990 --> 13:49.740
I'm deleting them.

13:49.740 --> 13:58.290
So it's happening because we said here on the note, say note, if you model, remove and remove that

13:58.290 --> 13:58.590
note.

13:59.980 --> 14:01.330
So we're removing all the dummies.

14:01.570 --> 14:06.400
Now, if you add something, let's say hello, New Day.

14:07.390 --> 14:08.350
Let's see if that works.

14:08.680 --> 14:14.470
And voila, note added, Everything works perfectly and I can delete and dummy.

14:15.490 --> 14:17.260
I can delete the one, we just had it now.

14:17.710 --> 14:18.460
I can continue.

14:18.820 --> 14:19.660
And there you have it.

14:21.340 --> 14:24.940
All right, so, ladies and gentlemen, I have to say this.

14:25.240 --> 14:31.870
What do you have learned is one of the best things, one of the best things, I think, in my opinion,

14:31.870 --> 14:38.830
that it was ever put together the concept in a way because it allows us to separate the concerns.

14:39.220 --> 14:46.600
Now anybody can just go to that one source of truth that that single source of truth, which is our

14:46.660 --> 14:47.440
Northview model.

14:47.680 --> 14:51.390
And look, we can add all kinds of functions here.

14:51.400 --> 14:57.520
Everything we need that will govern our data flow can add notes.

14:57.880 --> 14:58.990
We can remove notes.

14:59.170 --> 15:03.550
If we want to edit notes, we can also do that from here, whatever we want to do.

15:03.580 --> 15:10.120
We can do it from here because then any composer that needs to use this fee model can just implement

15:10.300 --> 15:13.720
can just go ahead and get this view model and start doing the work.

15:14.230 --> 15:21.340
We no longer have to worry about states that are left behind of states that are not synchronized.

15:21.730 --> 15:26.290
No more of that, just one place where we can get that state and data.

15:26.320 --> 15:26.890
Brilliant.

15:27.160 --> 15:27.910
Brilliant, indeed.

15:28.120 --> 15:31.540
And just like that, we have a working application.

15:31.550 --> 15:35.680
You can play around with this app and do all sorts of things.

15:35.980 --> 15:43.930
And please take the time to study this application because what we've just learned is going to come

15:43.930 --> 15:49.510
really handy as you continue with compose or Android development in general.

15:49.840 --> 15:55.720
The understanding of view model, just think of it as an entity that is outside of the structure of

15:55.720 --> 16:01.080
this tree that we have activities and of course, composable that way.

16:01.090 --> 16:07.300
Any composable, any class that needs to data the integral data that is there.

16:07.720 --> 16:13.060
All he has to do is get that view model essentially and get it and start using it done.

16:13.810 --> 16:14.430
All right.

16:14.440 --> 16:15.010
Very good.

16:15.430 --> 16:16.300
Congratulations.

16:16.660 --> 16:22.510
And again, play around with this concept will come back to this concept many, many times, and I want

16:22.510 --> 16:27.280
you to really a grasp of this so that it's not too difficult, right?

16:27.400 --> 16:28.400
So take your time.

16:28.420 --> 16:29.250
I can't take your time.

16:29.260 --> 16:32.170
No rush here, and I'll see you next.
