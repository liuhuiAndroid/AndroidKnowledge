WEBVTT

00:02.530 --> 00:09.960
All right, so we have completed our role here, so it's looking really good and we are happy with it.

00:09.970 --> 00:14.950
At least I am now in to go and look at the details screen.

00:15.100 --> 00:23.200
So I hope you were able to do what I asked you twice to filter the movie list, the get movie list,

00:23.200 --> 00:30.610
the function that gets all the movies and then filter through to find that movie that one movie contains

00:30.610 --> 00:31.930
that has the same idea.

00:32.400 --> 00:34.390
OK, how to do that?

00:34.540 --> 00:35.860
I'm sure you were able to do that.

00:36.250 --> 00:37.200
If not, no problem.

00:37.210 --> 00:40.140
Let's go ahead and open command E..

00:40.900 --> 00:44.830
We can go and see the latest recent files.

00:44.830 --> 00:46.960
We want to go to detailed screen.

00:47.260 --> 00:47.710
There we go.

00:48.790 --> 00:51.280
OK, so we have all of this here, things looking good.

00:51.790 --> 00:58.690
So if you look here, movie data, we are getting only this string here, which is the I.D. Let's change

00:58.690 --> 01:01.890
this to an ID, because that's probably the best course.

01:02.110 --> 01:11.020
So I'm going to say shift f six like that to change all of the occurrences of this variable.

01:11.060 --> 01:14.530
So I'm going to say movie ID like that.

01:15.370 --> 01:15.650
OK.

01:16.450 --> 01:25.180
So the first thing I want to do here is I'm going to filter through all of the movies and then check

01:25.180 --> 01:32.680
to check to see if we can find a movie that has this I.D. So I'm going to say Val and great movie.

01:36.930 --> 01:43.890
It's going to be equal to, I say, get movies and then I'm going to invoke the filter method because

01:43.890 --> 01:46.840
it's a list that is coming out of the movies, right?

01:47.220 --> 01:51.330
So it can invoke the filter method there.

01:51.330 --> 01:53.250
And then we have passed pretty predicate here.

01:53.550 --> 01:56.730
So this means here we are going to have an actual movie.

01:56.730 --> 02:00.810
So I'm going to just use that there with an arrow.

02:01.100 --> 02:02.040
OK, you know what, lambda?

02:02.460 --> 02:10.290
And here is where I'm going to pass the actual conditions when I see a movie that ID is equal to movie

02:10.290 --> 02:11.550
ID that we're passing.

02:12.330 --> 02:13.350
So what will happen here?

02:13.350 --> 02:17.940
If you have over a movie, it's going to see that movie is indeed a list of movies.

02:18.600 --> 02:22.170
The reason being is because Filter will return.

02:22.890 --> 02:28.650
The reason being is that filter here should have returned a list containing those types.

02:28.970 --> 02:34.590
OK, so this is probably better to say movie, say, new movie list.

02:35.280 --> 02:41.970
OK, so now at this point here, we should have at least one movie that will match the idea we're passing.

02:42.990 --> 02:44.130
So let's see if this is true.

02:44.140 --> 02:51.450
That means in our text surface here, where I'm passing the movie ID, I don't need a movie.

02:51.450 --> 02:58.170
It all I need now is to say movie list like that, and I'm just going to get first.

02:59.380 --> 03:05.950
That's found, or I can just go and say square brackets zero to say I'm going to get to the first index

03:06.610 --> 03:13.150
right off our list and it makes sense to get it for us because we should get at least one item that

03:13.150 --> 03:13.720
is matched.

03:14.260 --> 03:16.450
So it's going to be a list of just one item.

03:16.450 --> 03:17.560
So that works.

03:18.010 --> 03:20.890
And then, of course, once they have that object, let's go ahead and pass the title.

03:20.980 --> 03:22.690
So as to see if this works.

03:22.820 --> 03:23.830
So when I real quick.

03:24.610 --> 03:27.280
OK, now if I click on Avatar, I should see Avatar.

03:27.310 --> 03:28.090
It's very good.

03:28.660 --> 03:33.010
If I click Avengers, you should see Avengers, and it's just very random.

03:33.010 --> 03:34.660
One heart goes, I should see knockers.

03:34.780 --> 03:35.740
So it is working.

03:35.950 --> 03:37.390
The filter is indeed working.

03:37.990 --> 03:40.000
So as things are right now, this is not what we want.

03:40.000 --> 03:42.730
We want something a little bit more elaborate, something better.

03:43.210 --> 03:44.380
Well, we can do that.

03:44.740 --> 03:51.850
First, let's get rid of some of these parameters here because I don't want this to be in the center

03:52.120 --> 03:56.860
because I don't want this to arrange be arranged vertically center like this?

03:58.030 --> 04:02.620
Think unless we remove that or if we wanted, I could keep all of that instead of center.

04:03.040 --> 04:05.050
We can just say top like this.

04:05.110 --> 04:05.920
This works as well.

04:06.160 --> 04:06.460
OK.

04:07.420 --> 04:07.690
All right.

04:07.690 --> 04:13.060
So now inside of our techs here, now inside of our column, we want to do something.

04:13.630 --> 04:15.730
What we want to do first.

04:16.060 --> 04:18.400
I'm going to just go ahead and add the movie row.

04:18.790 --> 04:26.320
Now here is the beauty because we've created the widgets here and we added, which is I only have one

04:26.320 --> 04:28.510
widget, which is the movie row.

04:29.740 --> 04:30.580
Look what we can do.

04:31.630 --> 04:35.980
I can just go ahead and call Movie Row as such and pass a few parameters.

04:37.030 --> 04:39.130
What parameters you may ask arguments.

04:39.310 --> 04:42.490
I'm just going to pass the movie and pass our movie.

04:44.550 --> 04:48.000
List and you move your list that is not first.

04:48.480 --> 04:52.320
Just a different way of getting something and move row.

04:53.350 --> 04:57.850
Let's go ahead and add experimental annotation because that's what it's using.

04:58.020 --> 05:01.320
It's using and that was added at the top there.

05:02.070 --> 05:03.030
OK, very good.

05:03.750 --> 05:05.490
So at this point, we're passing.

05:05.790 --> 05:09.030
We're calling the movie row in object a movie object.

05:09.150 --> 05:16.950
We get that from our new movie list, which filtered and got the correct movie just like that.

05:17.280 --> 05:22.620
And if we run this, you will see we didn't have to do a lot of work.

05:24.570 --> 05:26.280
Click and what do you know?

05:26.550 --> 05:27.120
There we go.

05:27.390 --> 05:31.470
And even this expanded is also working here.

05:31.770 --> 05:38.640
This is why we create reusable functions so reusable, composable because now all I had to do.

05:38.670 --> 05:44.580
Ladies and gentlemen, was to call Movie Row anywhere I want and just pass the data.

05:45.760 --> 05:51.550
And Mo Farah will do what he needs to do, which is display all the information that he needs to display.

05:52.420 --> 05:53.320
OK, very good.

05:53.920 --> 05:55.090
So we have that information.

05:55.300 --> 06:03.040
Now we want to do is we want to create a scrollable, but a horizontal scrollable view that will contain

06:03.040 --> 06:08.260
all of the images pertaining to this movie the same way we have the lazy column.

06:08.920 --> 06:16.150
There is the lazy row as well, so now I can put get rid of this.

06:19.060 --> 06:21.370
We don't need this here, and we just.

06:21.760 --> 06:32.030
Let me put a spacer to give ourselves some space here modifier and let's say height of about eight dpi

06:32.370 --> 06:33.910
just to give a space, right?

06:34.510 --> 06:35.680
And I'm going to add a divider.

06:36.400 --> 06:45.520
Such and then was put a text in a text that says movie images lazy.

06:46.390 --> 06:46.930
Look at this.

06:46.940 --> 06:48.510
We use a lazy column.

06:48.520 --> 06:50.800
Now we can use lazy row.

06:51.610 --> 06:52.550
The same thing we did.

06:52.570 --> 06:56.370
We can just go ahead and get the trailing lamp to such.

06:56.740 --> 06:58.870
And inside here we can say items.

06:59.140 --> 07:03.340
And there are a lot of functions we can override here can invoke.

07:03.340 --> 07:06.470
That means a lot of functions that we can invoke.

07:06.490 --> 07:09.820
What we want is the items listed there.

07:10.870 --> 07:11.140
OK.

07:11.950 --> 07:16.300
So here I'm going to pass a movie list, new movie list.

07:16.300 --> 07:23.290
That is, I'm going to get the first item, which is the first actual object movie that it's containing.

07:23.290 --> 07:25.690
This list, which is the only one should be.

07:25.870 --> 07:32.680
And then I'm invoke the images because each movie object has the image has the property images, which

07:32.680 --> 07:38.560
is a list as you see here of strings, which in this case will contain all of the URLs.

07:38.950 --> 07:39.220
All right.

07:39.230 --> 07:47.650
So in this case, all sorts of lambda, and I'm going to add a image variable there so it can control

07:47.650 --> 07:48.130
everything.

07:48.520 --> 07:52.570
And then here I'm going to create a card like this card.

07:53.140 --> 07:58.150
For now, I'm going to pass a modifier and the padding start tapping padding.

07:58.780 --> 08:01.120
And then I'm going to say about 12 that dpi.

08:02.890 --> 08:05.920
And then I'm going to say size because I want this card to have a size.

08:05.920 --> 08:10.030
Let's give a size of a 240 dpi quite large.

08:10.900 --> 08:15.850
And while I'm here, let's go ahead and give a an elevation because it's a card, we can actually add

08:15.850 --> 08:16.570
elevation.

08:17.380 --> 08:17.800
Let's see.

08:17.800 --> 08:19.900
This has to be after that.

08:20.590 --> 08:24.310
So elevation, I want about five dpi.

08:26.300 --> 08:26.780
There we go.

08:27.440 --> 08:31.820
And then inside here, we're going to do the same thing we did before which we're going to add an image.

08:32.360 --> 08:33.110
He was the painter.

08:33.110 --> 08:35.320
We're going to use Croyle, so say, remember.

08:37.160 --> 08:44.750
Image painter as such, and we want to request one data because we're passing the URL and where we get

08:44.750 --> 08:50.930
that URL, where we get that from our image like this, which is this guy here.

08:50.930 --> 08:57.440
So this is going to be each individual URL that we have in our images property listed there.

08:58.130 --> 09:01.070
So we're getting each image URL in.

09:01.070 --> 09:09.290
Add here to to be displayed and for the description, we can see a movie poster.

09:10.010 --> 09:10.610
And that's it.

09:11.120 --> 09:16.250
Let's go ahead and Brian and see, OK, click Avatar and voila!

09:18.020 --> 09:21.710
All the images are showing how wonderful is this?

09:22.340 --> 09:29.390
Now the other thing I can do here because we understand the power of compartmentalizing our code right.

09:30.170 --> 09:35.270
We can remove this lazy row into its own function.

09:35.270 --> 09:38.480
So if you go ahead and select everything, right click.

09:38.750 --> 09:43.610
I can go to refactor such and you can say function, right?

09:43.880 --> 09:45.950
And then we can say something like.

09:50.370 --> 09:51.510
Horizontal.

09:53.270 --> 09:53.930
Image.

09:56.150 --> 09:57.410
Scrollable or.

10:00.620 --> 10:01.820
There's the horizontal.

10:04.230 --> 10:05.010
Scrollable.

10:06.300 --> 10:07.740
Image of you sent like this.

10:08.190 --> 10:08.420
OK.

10:08.610 --> 10:14.130
And it already has the parameters, you know, is that we need to pass the list of movies and all is

10:14.130 --> 10:14.370
good.

10:14.970 --> 10:16.250
So I'm going to say, OK.

10:16.860 --> 10:22.050
And just like that, you can see creative composable and there's a function and the name and we pass

10:22.050 --> 10:24.550
the value and everything is not set out there.

10:24.570 --> 10:25.860
We didn't have to do much.

10:26.850 --> 10:32.730
So this helps a lot because now we can use this horizontal scroll image view anywhere we want.

10:33.540 --> 10:33.740
Right?

10:33.960 --> 10:36.420
Just like we are able to use movie row.

10:38.280 --> 10:41.940
OK, let's just give it another run just to make sure we didn't break anything.

10:43.290 --> 10:44.910
OK, let's click this one.

10:46.200 --> 10:46.620
Voila!

10:47.610 --> 10:48.650
There are movies.

10:48.990 --> 10:50.940
Everything is working as before.

10:51.690 --> 10:59.160
And of course, you have this working still because we are using the movie row, OK?

11:00.270 --> 11:01.260
And we have the images.

11:01.350 --> 11:02.550
So we go back again.

11:05.970 --> 11:08.040
This one way have all these images.

11:15.200 --> 11:15.830
Can see.

11:17.740 --> 11:19.180
Now I'm using my phone here.

11:19.720 --> 11:24.340
So just like that, we were able to put together here a decent application.

11:24.580 --> 11:27.730
I can take this idea and run with it.

11:27.790 --> 11:31.780
There are a lot of things you can do with it, of course, but idea here is the same.

11:31.780 --> 11:32.860
We've learned a few things.

11:32.860 --> 11:37.000
So as we go, move forward and start building more applications.

11:37.000 --> 11:42.610
As you see here, we are going to add a few new things, a few new topics here and there to make it

11:42.610 --> 11:43.340
fun, right?

11:43.360 --> 11:44.450
So we build something.

11:44.480 --> 11:48.040
We know how to put together things and then we learn new things along the way.

11:48.910 --> 11:49.870
That's what are we doing here.

11:49.930 --> 11:50.170
So.

11:51.460 --> 11:59.740
So I hope this inspires you even further to look at Compose as another tool that he can use to build

11:59.740 --> 12:02.110
amazing modern Android applications.

12:02.470 --> 12:04.870
So take this application and make it your own.

12:04.960 --> 12:05.860
You modify it.

12:06.340 --> 12:13.630
Maybe this will spark other ideas, and the most important thing is to see the way we structure this

12:13.630 --> 12:14.220
application.

12:14.230 --> 12:15.160
This is very important.
